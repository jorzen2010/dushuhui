@model dushuhuiEntity.Ren
@section Topcss {
    <link href="~/plugins/iCheck/square/green.css" rel="stylesheet" type="text/css" />
}

<div class="container" style="margin-top:80px">
    <h3 style="font-weight:800">欢迎加入陪伴式成长读书会</h3>
    <div class="row" style="margin-top:30px">
        <div class="col-md-6">

            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", @name = "RegForm", @id = "RegForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="box-body">
                    <div class="col-md-12">

                        <div class="form-group">
                            @Html.LabelFor(model => model.RenUserEmail, new { @class = "control-label col-md-2" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.RenUserEmail, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RenUserEmail)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RenPassword, new { @class = "control-label col-md-2" })
                            <div class="col-sm-6">
                                @Html.PasswordFor(model => model.RenPassword, new { @class = "form-control" })
                               
                                @Html.ValidationMessageFor(model => model.RenPassword)
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="CategoryStatus" class="col-sm-2 control-label" style="padding-top:2px;">性别</label>
                            <div class="col-sm-10">
                                <input type="radio" name="RenSex" value="男">  男
                                <input type="radio" name="RenSex" value="女" checked="checked"> 女
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RenNickName, new { @class = "control-label col-md-2" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.RenNickName, new { @class = "form-control" })
                                <span><br>第一印象很重要，起个响亮的名号吧</span>
                                @Html.ValidationMessageFor(model => model.RenNickName)
                            </div>
                        </div>

                       

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.RenPhone, new { @class = "control-label col-md-2" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.RenPhone, new { @class = "form-control" })
                                <span><br>使用手机接收注册验证码<br>
                                验证的手机号如果没有绑定账号，会自动绑定当前账号。</span>
                                @Html.ValidationMessageFor(model => model.RenPhone)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" for="Yanzhengma">验证码</label>


                            <div class="col-sm-6">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="Yanzhengma" id="Yanzhengma">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button">获取验证码</button>
                                    </span>
                                </div>
                            </div>

                        </div>*@
                      
                        <div class="form-group">

                            <div class="col-sm-6 col-sm-offset-2">
                                <button class="btn btn-success">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注册&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                            </div>
                        </div>

                    </div>

                </div>
            }



        </div>

        <div class="col-md-4">

            <div class="row">
                <div class="col-md-12" style="line-height:30px;">
                    >&nbsp;已拥有账号<a href="">直接登录</a><br>
                    >&nbsp;<a href="">微信登录</a>
                </div>
            </div>
        </div>
    </div>

</div>


@section BottomScripts {

    <script type="text/javascript" src="~/plugins/iCheck/icheck.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
    <script type="text/javascript" src="~/plugins/bootbox.min.js"></script>
    <script type="text/javascript" src="~/Resource/js/SkyInit.js"></script>
<script type="text/javascript">
    $(function () {
        var validate = $("#RegForm").validate({
            // debug: true, //调试模式取消submit的默认提交功能
            errorClass: "field-validation-error", //默认为错误的样式类为：error
            // focusInvalid: false, //当为false时，验证无效时，没有焦点响应
            // onkeyup: false,
            //submitHandler: function (form) {   //表单提交句柄,为一回调函数，带一个参数：form
            //    alert("提交表单");
            //    form.submit();   //提交表单
            //},

            rules: {
                RenUserEmail: {
                    required: true,
                    email: true,
                    remote:{ 
                        type:"GET",
                        contentType: "application/json;charset=UTF-8",                          
                        url:"/Account/CheckEmailUser",//请求地址 
                        //传递的参数,不写默认是当前校验的值 
                    }
                },
                RenPassword: {
                    required: true,
                    rangelength: [3, 10]

                },
                RenNickName: {
                    required: true,
                    remote: {
                        type: "GET",
                        contentType: "application/json;charset=UTF-8",
                        url: "/Account/CheckNickName",//请求地址 
                        //传递的参数,不写默认是当前校验的值 
                    }
                    
                },

            },
            messages: {
                RenUserEmail: {
                    required: "邮箱为必填",
                    email: "EMail格式不正确"
                },
                RenPassword: {
                    required: "密码不能为空",
                    rangelength: $.format("密码最小长度:{0}, 最大长度:{1}。")
                },
                RenNickName: {
                    required: "你还没给自己起名字呢",
                    
                }
            }

        });

    });
</script>


}
